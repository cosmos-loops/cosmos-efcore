<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.EntityFrameworkCore.Sqlite</name>
    </assembly>
    <members>
        <member name="T:Cosmos.Dependency.CoosSqliteDbContextConfigExtensions">
            <summary>
            Cosmos SQLite DbContext configuration extensions
            </summary>
        </member>
        <member name="M:Cosmos.Dependency.CoosSqliteDbContextConfigExtensions.UseEfCoreWithSqlite``1(Cosmos.Dependency.DbContextConfig{Cosmos.Dependency.MicrosoftProxyRegister},System.Action{Cosmos.EntityFrameworkCore.EfCoreOptions})">
            <summary>
            Use EntityFramework Core with Sqlite
            </summary>
            <param name="context"></param>
            <param name="optAct"></param>
            <typeparam name="TContext"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dependency.CoosSqliteDbContextConfigExtensions.UseEfCoreWithSqlite``2(Cosmos.Dependency.DbContextConfig{Cosmos.Dependency.MicrosoftProxyRegister},System.Action{Cosmos.EntityFrameworkCore.EfCoreOptions})">
            <summary>
            Use EntityFramework Core with Sqlite
            </summary>
            <param name="context"></param>
            <param name="optAct"></param>
            <typeparam name="TContextService"></typeparam>
            <typeparam name="TContextImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.EntityMapping.AggregateRootMap`1">
            <summary>
            Mapping config for AggregateRoot
            <br />
            聚合根映射配置
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.EntityMapping.AggregateRootMap`1.MapVersion(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{`0})">
            <summary>
            映射乐观离线锁
            </summary>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.EntityMapping.EntityMap`1">
            <summary>
            Entity map
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.EntityMapping.ISqliteEntityMap">
            <summary>
            Interface for Sqlite entity map
            </summary>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.SqliteDbContext`1">
            <summary>
            Cosmos DbContext for Sqlite
            </summary>
            <typeparam name="TContext"></typeparam>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.SqliteDbContext`1.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{`0})">
            <summary>
            Create a new instance of <see cref="T:Cosmos.EntityFrameworkCore.SqliteDbContext`1"/>
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.SqliteDbContext`1.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            On model creating
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.SqlRaw.SqliteRawQueryGenerator.EnableRangeOperation">
            <summary>
            if IsForSingleTable=true, ZackQuerySqlGenerator will change the default behavior to capture PredicateSql and so on.
            if IsForSingleTable=false, ZackQuerySqlGenerator will use all the implementations of base class
            </summary>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.SqlRaw.SqliteRawQueryGenerator.ProjectionSql">
            <summary>
            columns of the select statement
            </summary>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.SqlRaw.SqliteRawQueryGenerator.PredicateSql">
            <summary>
            the where clause
            </summary>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.SqlRaw.SqliteRawQueryGenerator.LocalSql">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.SqlRaw.SqliteRawQueryGenerator.LocalGenerateSetOperation(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.SqlRaw.SqliteRawQueryGenerator.LocalGenerateTop(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.SqlRaw.SqliteRawQueryGenerator.LocalGeneratePseudoFromClause">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.SqlRaw.SqliteRawQueryGenerator.LocalGenerateOrderings(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.SqlRaw.SqliteRawQueryGenerator.LocalGenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.SqlRaw.SqliteRawQueryGenerator.LocalAliasSeparator">
            <inheritdoc />
        </member>
    </members>
</doc>
