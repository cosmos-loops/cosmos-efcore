<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.EntityFrameworkCore.MySqlConnector</name>
    </assembly>
    <members>
        <member name="T:Cosmos.Dependency.CosmosMySqlDbContextConfigExtensions">
            <summary>
            Cosmos MySQL DbContext configuration extensions.
            </summary>
        </member>
        <member name="M:Cosmos.Dependency.CosmosMySqlDbContextConfigExtensions.UseEfCoreWithMySql``1(Cosmos.Dependency.DbContextConfig{Cosmos.Dependency.MicrosoftProxyRegister},System.Action{Cosmos.EntityFrameworkCore.EfCoreOptions})">
            <summary>
            Use EntityFramework Core with MySql
            </summary>
            <param name="context"></param>
            <param name="optAct"></param>
            <typeparam name="TContext"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Dependency.CosmosMySqlDbContextConfigExtensions.UseEfCoreWithMySql``1(Cosmos.Dependency.DbContextConfig{Cosmos.Dependency.MicrosoftProxyRegister},System.Func{Microsoft.EntityFrameworkCore.ServerVersion},System.Action{Cosmos.EntityFrameworkCore.EfCoreOptions})">
            <summary>
            Use EntityFramework Core with MySql
            </summary>
            <param name="context"></param>
            <param name="optAct"></param>
            <param name="versionProvider"></param>
            <typeparam name="TContext"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Dependency.CosmosMySqlDbContextConfigExtensions.UseEfCoreWithMySql``2(Cosmos.Dependency.DbContextConfig{Cosmos.Dependency.MicrosoftProxyRegister},System.Action{Cosmos.EntityFrameworkCore.EfCoreOptions})">
            <summary>
            Use EntityFramework Core with MySql
            </summary>
            <param name="context"></param>
            <param name="optAct"></param>
            <typeparam name="TContextService"></typeparam>
            <typeparam name="TContextImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Dependency.CosmosMySqlDbContextConfigExtensions.UseEfCoreWithMySql``2(Cosmos.Dependency.DbContextConfig{Cosmos.Dependency.MicrosoftProxyRegister},System.Func{Microsoft.EntityFrameworkCore.ServerVersion},System.Action{Cosmos.EntityFrameworkCore.EfCoreOptions})">
            <summary>
            Use EntityFramework Core with MySql
            </summary>
            <param name="context"></param>
            <param name="versionProvider"></param>
            <param name="optAct"></param>
            <typeparam name="TContextService"></typeparam>
            <typeparam name="TContextImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.EntityMapping.AggregateRootMap`1">
            <summary>
            Mapping config for AggregateRoot
            <br />
            聚合根映射配置
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.EntityMapping.AggregateRootMap`1.MapVersion(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{`0})">
            <summary>
            映射乐观离线锁
            </summary>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.EntityMapping.EntityMap`1">
            <summary>
            Entity map
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.EntityMapping.IMySqlEntityMap">
            <summary>
            Interface for MySql entity map
            </summary>
        </member>
        <member name="T:Cosmos.EntityFrameworkCore.MySqlDbContext`1">
            <summary>
            Cosmos DbContext for MySql
            </summary>
            <typeparam name="TContext"></typeparam>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.MySqlDbContext`1.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{`0})">
            <summary>
            Create a new instance of <see cref="T:Cosmos.EntityFrameworkCore.MySqlDbContext`1"/>
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.MySqlDbContext`1.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="F:Cosmos.EntityFrameworkCore.SqlRaw.MySqlRawQueryGenerator._projectSql">
            <summary>
            columns of the select statement
            </summary>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.SqlRaw.MySqlRawQueryGenerator.EnableRangeOperation">
            <summary>
            if IsForSingleTable=true, ZackQuerySqlGenerator will change the default behavior to capture PredicateSQL and so on.
            if IsForSingleTable=false, ZackQuerySqlGenerator will use all the implementations of base class
            </summary>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.SqlRaw.MySqlRawQueryGenerator.PredicateSql">
            <summary>
            the where clause
            </summary>
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.SqlRaw.MySqlRawQueryGenerator.LocalSql">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.SqlRaw.MySqlRawQueryGenerator.LocalGenerateSetOperation(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.SqlRaw.MySqlRawQueryGenerator.LocalGenerateTop(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.SqlRaw.MySqlRawQueryGenerator.LocalGeneratePseudoFromClause">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.SqlRaw.MySqlRawQueryGenerator.LocalGenerateOrderings(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.EntityFrameworkCore.SqlRaw.MySqlRawQueryGenerator.LocalGenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.EntityFrameworkCore.SqlRaw.MySqlRawQueryGenerator.LocalAliasSeparator">
            <inheritdoc />
        </member>
    </members>
</doc>
